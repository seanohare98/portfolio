{"version":3,"sources":["components/Header.js","components/About.js","components/Portfolio.js","components/Resume.js","resumeData.js","components/Testimonials.js","components/ContactUs.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","react_default","a","createElement","Fragment","id","className","href","title","name","style","color","fontFamily","roleDescription","socialLinks","map","item","key","url","target","Component","About","src","alt","aboutme","address","website","Porfolio","portfolio","concat","imgurl","description","imagebaseurl","role","linkedinId","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","Achievements","work","CompanyName","YearOfLeaving","Achievements1","Achievements2","Achievements3","Achievements4","App","Header_Header","About_About","Portfolio_Porfolio","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.02371c6e.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nexport default class Header extends Component {\n    render() {\n        let resumeData = this.props.resumeData;\n        return (\n            <React.Fragment>\n\n                <header id=\"home\">\n                    <nav id=\"nav-wrap\">\n                        <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n                        <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\n                        <ul id=\"nav\" className=\"nav\">\n                            <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n                            <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n                            <li><a className=\"smoothscroll\" href=\"#portfolio\">Projects</a></li>\n                        </ul>\n                    </nav>\n\n                    <div className=\"row banner\">\n                        <div className=\"banner-text\">\n                            <h1 className=\"responsive-headline\">{resumeData.name}</h1>\n                            <h3 style={{color: '#fff', fontFamily: 'sans-serif '}}>{resumeData.roleDescription}\n                            </h3>\n                            <hr/>\n                            <ul className=\"social\">\n                                {\n                                    resumeData.socialLinks && resumeData.socialLinks.map(item => {\n                                            return (\n                                                <li key={item.name}>\n                                                    <a href={item.url} target=\"_blank\"><i\n                                                        className={item.className}></i></a>\n                                                </li>\n                                            )\n                                        }\n                                    )\n                                }\n                            </ul>\n                        </div>\n                    </div>\n\n                    <p className=\"scrolldown\">\n                        <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n                    </p>\n\n                </header>\n            </React.Fragment>\n        );\n    }\n}","import React, { Component } from 'react';\nexport default class About extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"about\">\n         <div className=\"row\">\n\n            <div className=\"three columns\">\n\n               <img className=\"profile-pic\"  src=\"images/profilepic.jpg\" alt=\"\" />\n\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <h2>About Me</h2>\n               <p>\n               {\n                 resumeData.aboutme\n               }\n               </p>\n\n               <div className=\"row\">\n\n                  <div className=\"columns contact-details\">\n\n                  <h2>Contact Details</h2>\n                  <p className=\"address\">\n       \t\t\t\t\t\t<span>{resumeData.name}</span>\n                     <br></br>\n       \t\t\t\t\t\t   <span>\n                     {resumeData.address}\n                    </span>\n                    <br></br>\n                    <span>{resumeData.website}</span>\n       \t\t\t\t\t   </p>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </section>\n    );\n  }\n}","import React, {Component} from 'react';\n\nexport default class Porfolio extends Component {\n    render() {\n        let resumeData = this.props.resumeData;\n        return (\n            <section id=\"portfolio\">\n                <div className=\"row\">\n                    <div className=\"twelve columns collapsed\">\n                        <h1>Some code/projects of mine.</h1>\n                        <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n                            {\n                                resumeData.portfolio && resumeData.portfolio.map((item) => {\n                                    return (\n                                        <div className=\"columns portfolio-item\">\n                                            <a href={item.url} target={\"_blank\"}>\n                                                <div className=\"item-wrap\">\n                                                    <img src={`${item.imgurl}`} className=\"item-img\"/>\n                                                    <div className=\"overlay\">\n                                                        <div className=\"portfolio-item-meta\">\n                                                            <h5>{item.name}</h5>\n                                                            <p>{item.description}</p>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </a>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}","import React, {Component} from 'react';\n\nexport default class Resume extends Component {\n    render() {\n        let resumeData = this.props.resumeData;\n        return (\n            <section id=\"resume\">\n\n                <div className=\"row education\">\n\n                    <div className=\"three columns header-col\">\n                        <h1><span>Education</span></h1>\n                    </div>\n\n                    <div className=\"nine columns main-col\">\n                        {\n                            resumeData.education && resumeData.education.map((item) => {\n                                return (\n                                    <div className=\"row item\">\n                                        <div className=\"twelve columns\">\n                                            <h3>{item.UniversityName}</h3>\n                                            <p className=\"info\">\n                                                {item.specialization}\n                                                <span>&bull;</span> <em\n                                                className=\"date\">{item.MonthOfPassing} {item.YearOfPassing}</em></p>\n                                            <p>\n                                                {item.Achievements}\n                                            </p>\n                                        </div>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n                <div className=\"row work\">\n                    <div className=\"three columns header-col\">\n                        <h1><span>Experience</span></h1>\n                    </div>\n\n                    <div className=\"nine columns main-col\">\n                        {\n                            resumeData.work && resumeData.work.map((item) => {\n                                return (\n                                    <div className=\"row item\">\n                                        <div className=\"twelve columns\">\n                                            <h3>{item.CompanyName}</h3>\n                                            <p className=\"info\">\n                                                {item.specialization}\n                                                <span>&bull;</span> <em\n                                                className=\"date\">{item.MonthOfLeaving} {item.YearOfLeaving}</em></p>\n                                            <p>\n                                                {item.Achievements1}\n                                            </p>\n                                            <p>\n                                                {item.Achievements2}\n                                            </p>\n                                            <p>\n                                                {item.Achievements3}\n                                            </p>\n                                            <p>\n                                                {item.Achievements4}\n                                            </p>\n                                        </div>\n\n                                    </div>\n\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}","let resumeData = {\n    \"imagebaseurl\": \"https://seanohare98.github.io/\",\n    \"name\": \"Sean O'Hare\",\n    \"role\": \"\", //US Citizen born in Tokyo. Having grown up 1/2 in Michigan and 1/2 in Shanghai, China has strongly shaped the way I operate on professional and personal levels. Transferred to CUHK from Michigan State for non-academic reasons, but currently interviewing for 2020 internships in the US. Always trying to write cleaner and more optimized code. Although I spend most of my on-screen time in the office as a part-time SWE Intern, I can promise significant contributions to some exciting passions projects throughout this year! Also an avid track and field fan/competitor, with a long jump PR of 6.82m or 22ft5inches. I've competed in NCAA DI meets with MSU Track and Field and meets in Hong Kong with CUHK Track and Field.\n    \"linkedinId\": \"sean-ohare\",\n    \"roleDescription\": \"Computer Science student @ The Chinese University of Hong Kong. Graduating from the University of Michigan or University of Toronto (already admitted to both) by Summer 2021.\",\n    \"socialLinks\": [\n        {\n            \"name\": \"linkedin\",\n            \"url\": \"https://www.linkedin.com/in/sean-ohare/\",\n            \"className\": \"fa fa-linkedin\"\n        },\n        {\n            \"name\": \"github\",\n            \"url\": \"http://github.com/seanohare98\",\n            \"className\": \"fa fa-github\"\n        },\n        {\n            \"name\": \"resume\",\n            \"url\" : \"https://drive.google.com/file/d/1Gdlcbaa59zU4_k7u9g4GPVKQKvHMQrLc/view\",\n            \"className\" : \"fa fa-file\"\n        }\n    ],\n    \"aboutme\": \"US Citizen born in Tokyo. Having grown up half in Michigan and half in Shanghai has very much shaped the way I operate on personal and professional levels. Transferred to Hong Kong from Michigan State for non-academic reasons, but currently interviewing for 2020 internships in the US. Always trying to write cleaner and more optimized code. Although I spend most of my on-screen time in the office as a part-time SWE Intern, I can promise significant contributions to some exciting passion projects in 2020! Also an avid track and field fan/competitor, with a long jump PR of 6.82 meters or 22.5 feet. I've competed in NCAA DI meets with MSU Track and Field and meets in Hong Kong with CUHK Track and Field.\",\n    \"address\": \"Hong Kong/Michigan\",\n    \"website\": \"seanohare@link.cuhk.edu.hk\",\n    \"education\": [\n        {\n            \"UniversityName\": \"The Chinese University of Hong Kong\",\n            \"specialization\": \"Bachelor of Science in Computer Science\",\n            \"MonthOfPassing\": \"May\",\n            \"YearOfPassing\": \"2021\",\n            \"Achievements\": \"Honors at Entrance, University Admission Scholarship, Faculty of Engineering Admission Scholarship, Track and Field Student-Athlete\"\n        },\n        {\n            \"UniversityName\": \"Michigan State University\",\n            \"specialization\": \"Bachelor of Science in Computer Science\",\n            \"YearOfPassing\": \"Transferred\",\n            \"Achievements\": \"Charles Drew Science Scholar, Design for America: MSU, Track and Field Student-Athlete\"\n        }\n    ],\n    \"work\": [\n        {\n            \"CompanyName\": \"Invest Bots Limited\",\n            \"specialization\": \"Software Engineering Intern\",\n            \"YearOfLeaving\": \"May 2019 - Present\",\n            \"Achievements1\": \"- Manage the company's primary stock data API and associated codebase/OpenAPI documentation\",\n            \"Achievements2\": \"- Reduced several endpoint-response times by up to 3x through implementation of Redis caching and improved SQL queries/server-side logic\",\n            \"Achievements3\": \"- Implemented a CI/CD pipeline for 4 company GitLab repos using a docker-in-docker approach, with automated testing (Jest, SuperTest), staging, and deployment to Kubernetes\",\n            \"Achievements4\": \"- Built React components for displaying data-tables and graphs for use by clients and internal BAs\",\n\n        },\n        {\n            \"CompanyName\": \"MSU Information Technology\",\n            \"specialization\": \"Information Technology Intern\",\n            \"YearOfLeaving\": \"May 2018 - August 2018\",\n            \"Achievements1\": \"- Built and deployed a website (www.msumigration.info) to assist with the oversight of a campus-wide migration project by posting weekly schedule and progress notifications\",\n            \"Achievements2\": \"- Wrote several PowerShell scripts to handle Active Directory user management functions\",\n            \"Achievements3\": \"- Managed weekly Excel spreadsheets containing migration wave plans and positions for 25 other employees\",\n            \"Achievements4\": \"- Provided technical support and documentation on an ad-hoc basis\",\n        },\n        {\n            \"CompanyName\": \"Time Out Shanghai\",\n            \"specialization\": \"Editorial Intern\",\n            \"YearOfLeaving\": \"June 2017 - August 2017\",\n            \"Achievements1\": \"- Edited dozens of pages on the Time Out Shanghai website, using HTML/CSS through a proprietary CMS, to be in accordance with the brand's style guide\",\n            \"Achievements2\": \"- Wrote and published 5 blog posts on upcoming events\",\n            \"Achievements3\": \"- Produced digital content using Adobe Photoshop and Final Cut Pro\",\n            \"Achievements4\": \"- Gathered information for news stories and organized events\",\n        }\n        ],\n    \"portfolio\": [\n        {\n            \"name\": \"DormLink\",\n            \"description\":\n                \"A system for college dorms to match compatible roommates. Leverages the Neo4j graph database platform and traditional RDBMS for scalable k-Nearest-Neighbor graph construction.\",\n            \"url\": \"https://github.com/seanohare98/dormlink\",\n            \"imgurl\": \"images/portfolio/dormlink.png\"\n        },\n        {\n            \"name\": \"Track and Field Results Reporting System\",\n            \"description\":\n                \"A Full-Stack web application to aggregate and rank Hong Kong Track and Field results, providing athletes (like myself) with an interactive tool to visualize the progression of past/present competition seasons\",\n            \"url\": \"http://www.hktrackandfield.org\",\n            \"imgurl\": \"images/portfolio/hktf.jpg\"\n        },\n        {\n            \"name\": \"PDF Table Scraper\",\n            \"description\": \"A script to retrieve data from Hong Kong Athletic Association meet result PDFs\",\n            \"url\": \"https://github.com/seanohare98/pdf-scraper\",\n            \"imgurl\": \"images/portfolio/hktf-scraper.jpg\"\n        },\n        {\n            \"name\": \"Multithreaded FTP Server\",\n            \"description\": \"A multi-client/multi-server FTP program, employing erasure coding and multithreading for concurrent connections\",\n            \"url\": \"https://github.com/seanohare98/multithreaded-ftp-server\",\n            \"imgurl\": \"images/portfolio/ftp.jpg\"\n        },\n        {\n            \"name\": \"AVL Tree\",\n            \"description\": \"Implemented a self-balancing AVL data structure for tree traversal practice\",\n            \"url\": \"https://github.com/seanohare98/avl-tree\",\n            \"imgurl\": \"images/portfolio/avl.jpg\"\n        },\n        {\n            \"name\": \"Unix Shell\",\n            \"description\": \"Wrote a fully functional Unix shell capable of command chaining\",\n            \"url\": \"https://github.com/seanohare98/unix-shell\",\n            \"imgurl\": \"images/portfolio/shell.png\"\n        },    {\n            \"name\": \"Hospital Appointment API\",\n            \"description\": \"An Express.js API to simulate a hospital’s appointment system.Gained exposure to NoSQL and Mongoose ORM\",\n            \"url\": \"https://github.com/seanohare98/hospital-api\",\n            \"imgurl\": \"images/portfolio/hospital.jpg\"\n        },    {\n            \"name\": \"MSU IT Dashboard\",\n            \"description\": \"A dashboard for IT support resources\",\n            \"url\": \"http://www.msumigration.info\",\n            \"imgurl\": \"images/portfolio/msu.jpg\"\n        },\n\n    ]\n}\n\nexport default resumeData","import React, { Component } from 'react';\nexport default class Testimonials extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"testimonials\">\n        <div className=\"text-container\">\n          <div className=\"row\">\n            <div className=\"two columns header-col\">\n              <h1><span>Client Testimonials</span></h1>\n            </div>\n            <div className=\"ten columns flex-container\">\n              <div className=\"flexslider\">\n                <ul className=\"slides\">\n                  {\n                    resumeData.testimonials && resumeData.testimonials.map((item)=>{\n                      return(\n                        <li>\n                          <blockquote>\n                            <p>\n                            {item.description}\n                            </p>\n                            <cite>{item.name}</cite>\n                          </blockquote>\n                        </li>\n                      )\n                    })\n                  }\n                </ul>\n              </div> {/* div.flexslider ends */}\n            </div> {/* div.flex-container ends */}\n          </div> {/* row ends */}\n        </div>  {/* text-container ends */}\n      </section>\n        );\n  }\n}","import React, { Component } from 'react';\nexport default class ContactUs extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"contact\">\n          <div className=\"row section-head\">\n            <div className=\"ten columns\">\n              <p className=\"lead\">\n              Feel free to contact me for any work or suggestions below\n              </p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <aside className=\"eigth columns footer-widgets\">\n              <div className=\"widget\">\n                <h4>Linked in :\n                  {resumeData.linkedinId}\n                </h4>\n              </div>\n            </aside>\n          </div>\n        </section>\n        );\n  }\n}","import React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li>\n                    <a href={item.url}>\n                    <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n          \n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","import React, {Component} from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Portfolio from './components/Portfolio';\nimport Testimonials from './components/Testimonials';\nimport ContactUs from './components/ContactUs';\nimport Footer from './components/Footer';\nimport resumeData from './resumeData';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Header resumeData={resumeData}/>\n                <About resumeData={resumeData}/>\n                <Portfolio resumeData={resumeData}/>\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}